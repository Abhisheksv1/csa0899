Write a Python program to create a dictionary from two lists, one for keys and one for values.

def create_dict_from_lists(keys, values):
    if len(keys) != len(values):
        raise ValueError("Keys and values lists must have the same length")
    
    return dict(zip(keys, values))

# Example usage
if __name__ == "__main__":
    keys = ['name', 'age', 'city']
    values = ['Alice', 30, 'New York']
    
    try:
        result_dict = create_dict_from_lists(keys, values)
        print("Created dictionary:", result_dict)
    except ValueError as e:
        print(e)


Write a Python program to merge two dictionaries.

def merge_dicts_update(dict1, dict2):
    merged_dict = dict1.copy()  # Create a copy to avoid modifying the original dict1
    merged_dict.update(dict2)  # Merge dict2 into the copy
    return merged_dict

# Example usage
if __name__ == "__main__":
    dict1 = {'a': 1, 'b': 2}
    dict2 = {'b': 3, 'c': 4}
    
    result_dict = merge_dicts_update(dict1, dict2)
    print("Merged dictionary using update():", result_dict)


Write a Python program to find the key of the maximum value in a dictionary.


def find_key_of_max_value(d):
    if not d:
        raise ValueError("The dictionary is empty")
    
    # Find the key with the maximum value
    max_key = max(d, key=d.get)
    return max_key

# Example usage
if __name__ == "__main__":
    my_dict = {'a': 10, 'b': 20, 'c': 15}
    
    try:
        key_of_max_value = find_key_of_max_value(my_dict)
        print("Key with the maximum value:", key_of_max_value)
    except ValueError as e:
        print(e)
